<project name="StorageCloudSim" basedir="." default="main" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="dir.src"     value="src"/>
    <property name="dir.lib"     value="src"/>
    <property name="dir.test"    value="tests"/>
    <property name="dir.build"   value="build"/>

    <property name="dir.classes" value="${dir.build}/classes"/>
    <property name="dir.jar"     value="${dir.build}/jar"/>
    <property name="dir.report"  value="${dir.build}/junitreport"/>

    <target name="clean">
        <delete dir="${dir.build}"/>
    </target>

    <property name="ivy.install.version" value="2.1.0-rc2" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get    src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
                dest="${ivy.jar.file}"
                usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not
    already dropped it into ant's lib dir (note that the latter copy
    will always take precedence). We will not fail as long as local
    lib dir exists (it may be empty) and ivy is in at least one of
    ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
        <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant"
             classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve">
        <ivy:retrieve />
        <ivy:cachepath pathid="default.classpath" conf="default" useOrigin="true" />
    </target>

    <path id="build-classpath">
        <fileset dir="${dir.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile" description="compile application" depends="resolve">
        <mkdir dir="${dir.classes}"/>
        <javac destdir="${dir.classes}" includeantruntime="true">
            <src path="${dir.src}"/>
            <src path="cloudsim-3.0.3-patched"/>
            <classpath refid="default.classpath" />
        </javac>
    </target>

    <target name="compileTests" depends="compile" description="compile the jUnit test cases">
        <javac srcdir="${dir.test}" destdir="${dir.classes}" includeantruntime="true">
            <classpath refid="default.classpath" />
        </javac>
    </target>

    <path id="application" location="${dir.jar}/${ant.project.name}.jar" />


    <target name="jar" depends="compile">
        <mkdir dir="${dir.jar}"/>
        <manifestclasspath property="lib.list" jarfile="${dir.jar}/${ant.project.name}.jar">
            <classpath refid="build-classpath"/>
        </manifestclasspath>
        <jar destfile="${dir.jar}/${ant.project.name}.jar" basedir="${dir.classes}">
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="edu.kit.cloudSimStorage.Main"/>
                <attribute name="Class-Path" value="${lib.list}"/>
            </manifest>
        </jar>
        <jar destfile="${dir.jar}/CloudGenerator.jar" basedir="${dir.classes}">
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="edu.kit.cloudSimStorage.tools.GenerateCloud"/>
                <attribute name="Class-Path" value="${lib.list}"/>
            </manifest>
        </jar>
        <jar destfile="${dir.jar}/SequenceGenerator.jar" basedir="${dir.classes}">
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="edu.kit.cloudSimStorage.tools.SimpleFileSequenceGenerator"/>
                <attribute name="Class-Path" value="${lib.list}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${dir.jar}/${ant.project.name}.jar" fork="true"/> 
    </target>
    <target name="generateCloud" depends="jar">
        <java jar="${dir.jar}/CloudGenerator.jar" fork="true" /> 
    </target>
    <target name="generateSequences" depends="jar">
        <java jar="${dir.jar}/SequenceGenerator.jar" fork="true" /> 
    </target>

    <target name="test" depends="compileTests, jar">
        <mkdir dir="${dir.report}" />
        <junit printsummary="yes" showoutput="true" enabletestlistenerevents="true" haltonfailure="true">
            <classpath>
                <path refid="application" />
                <path refid="default.classpath" />
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${dir.report}">
                <fileset dir="${dir.test}">
                    <include name="**/Test*.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

     <target name="junitreport" depends="test">
        <junitreport todir="${dir.report}">
            <fileset dir="${dir.report}" includes="TEST-*.xml"/>
            <report todir="${dir.report}"/>
        </junitreport>
        <delete>
            <fileset dir="${dir.report}" includes="TEST-*.xml" />
        </delete>
    </target>

    <target name="clean-build" depends="clean,jar"/>
    <target name="main" depends="clean,run"/>
</project>
